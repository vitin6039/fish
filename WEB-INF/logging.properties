############################################################
# Logging Configuration File
#
# You can use this file by using a system property, 
# for example "java -Djava.util.logging.config.file=thisfile"
# 
# You may also replace the default logging.properties file in
# JDK_HOME/jre/lib/logging.properties
#
# See the Java Logging API for further details.
# See as well :
# http://www.javapractices.com/Topic143.cjp
############################################################

# Global properties

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler.
handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# Loggers and Handlers may override this level
.level= SEVERE

# Loggers
# ---------------------------------------
hirondelle.web4j.level=FINE
hirondelle.web4j.config.level=FINE
hirondelle.web4j.data.level=FINE
hirondelle.web4j.model.level=FINE
hirondelle.web4j.ui.level=FINE
hirondelle.web4j.ui.filter.level=FINE
hirondelle.web4j.ui.tag.level=FINE
hirondelle.web4j.util.level=FINE
hirondelle.web4j.webUtil.level=FINE
hirondelle.fish.level=FINE  

# Handlers
# --------------------------------------
# Describes specific configuration info for Handlers.
# default file output is in user's home directory.

# Limit messages printed on the console to this level and above
java.util.logging.ConsoleHandler.level = FINE
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

java.util.logging.FileHandler.pattern = %h/java%u.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter


